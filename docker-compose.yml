version: '3.9'
services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8080:5000"
    volumes:
      - ./backend:/src:delegated # Mount backend code for dev only
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      ConnectionStrings__DefaultConnection: "Server=mssql;Database=${MSSQL_DATABASE};User=${MSSQL_USER};Password=${MSSQL_PASSWORD};TrustServerCertificate=True;"
    env_file:
      - .env
    depends_on:
      - mssql
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - lms-network

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "${VITE_FRONTEND_PORT}:${VITE_FRONTEND_PORT}"
    volumes:
      - ./frontend:/app:delegated
    env_file:
      - .env
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "${VITE_FRONTEND_PORT}"]
    networks:
      - lms-network

  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: mssql
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: ${MSSQL_PASSWORD}
      ACCEPT_EULA: "Y"
    volumes:
      - mssql-data:/var/opt/mssql
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "${MSSQL_PASSWORD}", "-Q", "SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - lms-network

networks:
  lms-network:
    driver: bridge

volumes:
  mssql-data: